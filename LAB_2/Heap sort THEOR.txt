Пирамидальная сортировка (Heap Sort)
Пирамидальная сортировка (Heap Sort) - это алгоритм сортировки, который использует структуру данных кучу (heap). Основная идея состоит в построении максимальной кучи из массива, а затем последовательном извлечении максимального элемента и перестроении кучи.

Основные шаги пирамидальной сортировки:

Построить максимальную кучу из исходного массива.
Повторить следующее до тех пор, пока куча не станет пустой:
Переместить корень (максимальный элемент) в конец массива.
Уменьшить размер кучи на 1.
Восстановить свойство кучи для нового корня.
Временная сложность пирамидальной сортировки - O(n log n) в худшем, среднем и лучшем случаях.


Объяснение кода
Пирамидальная сортировка (Heap Sort)
Функция heapify: Восстанавливает свойство кучи для поддерева, корень которого находится в индексе i, а размер кучи - n.
Функция heap_sort: Сначала строит максимальную кучу из массива, а затем последовательно извлекает максимальные элементы и восстанавливает кучу для оставшихся элементов.

largest = i: Инициализация наибольшего как текущего корня.
left = 2 * i + 1: Индекс левого потомка.
right = 2 * i + 2: Индекс правого потомка.
if left < n and arr[i] < arr[left]: Проверка, если левый потомок больше корня.
if right < n and arr[largest] < arr[right]: Проверка, если правый потомок больше текущего наибольшего.
if largest != i: Если наибольший элемент изменился, поменять местами текущий элемент и наибольший, и рекурсивно применить heapify к затронутому поддереву.


Функция Heap sort:

n = len(arr): Определяем размер массива.
for i in range(n // 2 - 1, -1, -1): Построение кучи. Начинаем с последнего узла, который имеет потомков, и вызываем heapify для каждого узла.
for i in range(n-1, 0, -1): Извлечение элементов из кучи по одному. Перемещаем корень в конец массива и вызываем heapify для оставшейся кучи.