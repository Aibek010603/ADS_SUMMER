Быстрая сортировка (Quick Sort)
Быстрая сортировка (Quick Sort) - это алгоритм сортировки, который использует принцип "разделяй и властвуй". Основная идея состоит в выборе опорного элемента (pivot), разделении массива на две части - элементы меньше и больше опорного элемента, и рекурсивной сортировке каждой части.

Основные шаги быстрой сортировки:

Выбрать опорный элемент.
Разделить массив на две части: элементы, меньшие опорного элемента, и элементы, большие опорного элемента.
Рекурсивно применить быструю сортировку к каждой части.
Временная сложность быстрой сортировки - O(n log n) в среднем и лучшем случаях и O(n^2) в худшем случае.


Быстрая сортировка (Quick Sort)
Функция quick_sort: Рекурсивно сортирует массив. Выбирает опорный элемент, делит массив на три части (меньше опорного, равные опорному, больше опорного) и рекурсивно сортирует каждую часть.
Оба алгоритма эффективны для сортировки массивов и имеют свои преимущества в зависимости от конкретных условий задачи.

if len(arr) <= 1: Базовый случай рекурсии. Если длина массива меньше или равна 1, возвращаем массив.
pivot = arr[len(arr) // 2]: Выбираем опорный элемент как средний элемент массива.
left = [x for x in arr if x < pivot]: Создаем подмассив элементов, меньших опорного.
middle = [x for x in arr if x == pivot]: Создаем подмассив элементов, равных опорному.
right = [x for x in arr if x > pivot]: Создаем подмассив элементов, больших опорного.
return quick_sort(left) + middle + quick_sort(right): Рекурсивно сортируем подмассивы и объединяем их с опорным элементом.